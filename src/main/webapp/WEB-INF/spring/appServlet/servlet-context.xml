<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		    http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/jee 
                    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
                    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
		<path-matching registered-suffixes-only="true" />
		<message-converters> <!-- FIXME: don't use this in production!! -->
			<beans:bean id="jacksonHttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="prettyPrint" value="true" />
			</beans:bean>
		</message-converters>
	</annotation-driven>
	
	<!-- <beans:bean class="com.dak.duty.config.SwaggerConfig"></beans:bean>  -->

	<tx:annotation-driven transaction-manager="transactionManager" />

	<jpa:repositories base-package="com.dak.duty.repository" />

	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.dak.duty" />

	<!-- <jdbc:embedded-database id="dataSource" type="HSQL"> </jdbc:embedded-database> -->

	<!--  -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="org.postgresql.Driver"/> 
		<beans:property name="url" value="jdbc:postgresql://localhost:15432/duty"/> 
			<beans:property name="username" value="duty"/> 
			<beans:property name="password" value="dbpass"/> 
		</beans:bean>

	<!-- <jee:jndi-lookup id="dataSource" jndi-name="jdbc/dutyDB"
		expected-type="javax.sql.DataSource" />
		 -->

	<beans:bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<!-- spring data jpa -->
	<beans:bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<beans:property name="showSql" value="false" />
		<beans:property name="generateDdl" value="true" />
		<beans:property name="database" value="POSTGRESQL" />
	</beans:bean>

	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<!-- spring based scanning for entity classes> -->
		<beans:property name="packagesToScan" value="com.dak.duty.model" />
		
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.use_sql_comments">false</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="hibernate.format_sql">false</beans:prop>
				<!-- caching -->
				<!-- -->	
				<beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</beans:prop>
				<beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
				<beans:prop key="hibernate.cache.max_fetch_depth">4</beans:prop>
         		<beans:prop key="hibernate.cache.use_query_cache">true</beans:prop>
         		<beans:prop key="hibernate.cache.use_outer_join">true</beans:prop>
         		<beans:prop key="net.sf.ehcache.configurationResourceName">/myehcache.xml</beans:prop>
         		<beans:prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</beans:prop>
         		 
				<!-- // caching -->	
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- simple cache manager -->
	<!--
	<cache:annotation-driven />
	
	<beans:bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	    <beans:property name="caches">
	        <beans:set>
	            <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="default"/>
	            <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="account"/>
	        </beans:set>
	    </beans:property>
	</beans:bean>
	-->


</beans:beans>
